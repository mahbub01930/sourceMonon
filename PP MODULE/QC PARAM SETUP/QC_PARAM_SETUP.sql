-------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------

--RIGHT PANEL  BODY(STAGE TABLE-QC SPEC) - 1st API
API TYPE : GET
API NAME : api/pp/get-qc-stage-process-data/{pPRODUCTID}

Response Fields :  
	 AC.ELEMENT_NAME = STAGE_NAME, PC.PROCESS_NAME, PCC.PROCESS_NAME = SUB_PROCESS_NAME
Operational Fields: 
	PPT.PROD_ID, PTP.WIP_STAGE_ID, AC.ELEMENT_NAME, PTP.PROCESS_ID, PC.PROCESS_NAME, PTP.SUB_PROCESS_ID, PCC.PROCESS_NAME = SUB_PROCESS_NAME

PARAMETER : PPT.PROD_ID = pPRODUCTID (LEFT PANEL PRODUCT ID CLICK EVENT) 

Table Name: PP_PROD_PROC_TYPE = PPT 
            PP_PROC_TYPE_PROCESS = PTP
            ADM_CODE_ELEMENTS = AC 
            PP_PROCESS_CONFIG = PC 
            PP_PROCESS_CONFIG = PCC


Relation : 
          PPT.ID = PTP.PROD_PROC_TYPE_ID (ONE TO MANY)
          PTP.WIP_STAGE_ID = AC.ID (ONE TO ONE)
          PTP.PROCESS_ID = PC.ID (ONE TO ONE)
          PTP.SUB_PROCESS_ID = PCC.ID (ONE TO ONE)(LEFT JOIN)
  	
Filter by:   
            PTP.QC_REQUIRED='Y' 
            AND PPT.PROD_ID = :pPRODUCTID --1002
                  
QUERY :  
 
SELECT PPT.PROD_ID, PTP.WIP_STAGE_ID, AC.ELEMENT_NAME, PTP.PROCESS_ID, PC.PROCESS_NAME, PTP.SUB_PROCESS_ID, PCC.PROCESS_NAME AS SUB_PROCESS_NAME
FROM PP_PROD_PROC_TYPE PPT 
JOIN PP_PROC_TYPE_PROCESS PTP ON PPT.ID=PTP.PROD_PROC_TYPE_ID
LEFT JOIN ADM_CODE_ELEMENTS AC ON PTP.WIP_STAGE_ID=AC.ID
LEFT JOIN PP_PROCESS_CONFIG PC ON PTP.PROCESS_ID=PC.ID
LEFT JOIN PP_PROCESS_CONFIG PCC ON PTP.SUB_PROCESS_ID=PCC.ID
WHERE PTP.QC_REQUIRED='Y' AND WIP_STAGE_ID IS NOT NULL
AND PPT.PROD_ID = :pPRODUCTID --10161

-----------------------------------------------------------------


--RIGHT PANEL  BODY(STAGE TABLE-IPQC SPEC) - 2nd API
API TYPE : GET
API NAME : api/pp/get-ipqc-stage-process-data/{pPRODUCTID }

Response Fields :  
	 AC.ELEMENT_NAME = STAGE_NAME, PC.PROCESS_NAME, PCC.PROCESS_NAME = SUB_PROCESS_NAME
Operational Fields: 
	PPT.PROD_ID, PTP.WIP_STAGE_ID, AC.ELEMENT_NAME, PTP.PROCESS_ID, PC.PROCESS_NAME, PTP.SUB_PROCESS_ID, PCC.PROCESS_NAME = SUB_PROCESS_NAME

PARAMETER : PPT.PROD_ID = pPRODUCTID (LEFT PANEL PRODUCT ID CLICK EVENT) 

Table Name: PP_PROD_PROC_TYPE = PPT 
            PP_PROC_TYPE_PROCESS = PTP
            ADM_CODE_ELEMENTS = AC 
            PP_PROCESS_CONFIG = PC 
            PP_PROCESS_CONFIG = PCC


Relation : 
          PPT.ID = PTP.PROD_PROC_TYPE_ID (ONE TO MANY)
          PTP.WIP_STAGE_ID = AC.ID (ONE TO ONE)
          PTP.PROCESS_ID = PC.ID (ONE TO ONE)
          PTP.SUB_PROCESS_ID = PCC.ID (ONE TO ONE)(LEFT JOIN)
  	
Filter by:   
            PTP.IPQC_REQUIRED='Y' 
            AND PPT.PROD_ID = :pPRODUCTID --1002
                  
QUERY :  
 
SELECT PPT.PROD_ID, PTP.WIP_STAGE_ID, AC.ELEMENT_NAME, PTP.PROCESS_ID, PC.PROCESS_NAME, PTP.SUB_PROCESS_ID, PCC.PROCESS_NAME AS SUB_PROCESS_NAME
FROM PP_PROD_PROC_TYPE PPT 
JOIN PP_PROC_TYPE_PROCESS PTP ON PPT.ID=PTP.PROD_PROC_TYPE_ID
LEFT JOIN ADM_CODE_ELEMENTS AC ON PTP.WIP_STAGE_ID=AC.ID
LEFT JOIN PP_PROCESS_CONFIG PC ON PTP.PROCESS_ID=PC.ID
LEFT JOIN PP_PROCESS_CONFIG PCC ON PTP.SUB_PROCESS_ID=PCC.ID
WHERE PTP.QC_REQUIRED='Y' 
AND PPT.PROD_ID = :pPRODUCTID --1002

-----------------------------------------------------------------

--LEFT  PANEL  MATERIAL TYPE FILTER ICON -   3rd API
API TYPE : GET
API NAME: api/pp/get_material_type(PREVIOUS API NEED TO CHANGE)

Response Fields :  
	 DESCRIPTION,  CAT_NAME
Operational Fields: 
	ID, DESCRIPTION ,
             'RAW - ' || CAT_NAME = CAT_NAME
             'PACKING - ' || CAT_NAME = CAT_NAME
             'BULK - ' || CAT_NAME = CAT_NAME
             'SFG - ' || CAT_NAME = CAT_NAME

PARAMETER :   

Table Name: 
            ADM_PROD_CATEGORY
            
Relation :  
           UNION ALL OF ADM_PROD_CATEGORY TABLE.
  	
Filter by:   
            1. RAW:- PARENT=11 AND LVL=2 AND PROD_TYPE IN(502) 
            2. PACKING:- PARENT=11 AND LVL=2 AND PROD_TYPE IN(503)
            3. BULK:- PARENT=11 AND LVL=2 AND PROD_TYPE IN(514)
            4. SFG:-   PARENT=11 AND LVL=2 AND PROD_TYPE IN(504)
                  
QUERY :  
  
SELECT ID, DESCRIPTION, 'RAW - ' || CAT_NAME AS CAT_NAME
FROM ADM_PROD_CATEGORY WHERE PARENT=25 AND LVL=2 AND PROD_TYPE IN(502)
UNION ALL
SELECT ID, DESCRIPTION, 'PACKING - ' || CAT_NAME AS CAT_NAME
FROM ADM_PROD_CATEGORY WHERE PARENT=25 AND LVL=2 AND PROD_TYPE IN(503)
UNION ALL
SELECT ID, DESCRIPTION, 'MASTER - ' || CAT_NAME AS CAT_NAME
FROM ADM_PROD_CATEGORY WHERE PARENT=25 AND LVL=2 AND PROD_TYPE IN(506)
UNION ALL
SELECT ID, DESCRIPTION, 'SFG - ' || CAT_NAME AS CAT_NAME
FROM ADM_PROD_CATEGORY WHERE PARENT=11 AND LVL=2 AND PROD_TYPE IN(504)


----------------------------------------------


--RIGHT PANEL  BODY -   - 4th API (NO CHANGE)
API TYPE : GET
API NAME : api/pp/get-qctest-stage-data/{pQC_PARAM_ID}

Response Fields :  
	 AC.ELEMENT_NAME = WIP_STAGE_NAME, PC.PROCESS_NAME, PCC.PROCESS_NAME = SUB_PROCESS_NAME
Operational Fields: 
	PP.ID, PP.QC_PARAM_ID, PP.WIP_STAGE_ID, AC.ELEMENT_NAME AS WIP_STAGE_NAME, PP.PROCESS_ID, PC.PROCESS_NAME, PP.SUB_PROCESS_ID, PCC.PROCESS_NAME AS SUB_PROCESS_NAME
 
PARAMETER : PP.QC_PARAM_ID = pQC_PARAM_ID 

Table Name: 
            PP_QC_PARAM_PROCESS = PP
            ADM_CODE_ELEMENTS = AC         
            PP_PROCESS_CONFIG = PC 
            PP_PROCESS_CONFIG = PCC
             
            
Relation :  
            PP.WIP_STAGE_ID=AC.ID
            PP.PROCESS_ID=PC.ID
            PP.SUB_PROCESS_ID=PCC.ID
  
Filter by:   
            PP.IS_IPQC = 'N'
                  
QUERY :  
  
SELECT PP.ID, PP.QC_PARAM_ID, PP.WIP_STAGE_ID, AC.ELEMENT_NAME AS WIP_STAGE_NAME, PP.PROCESS_ID, PC.PROCESS_NAME, PP.SUB_PROCESS_ID, PCC.PROCESS_NAME AS SUB_PROCESS_NAME
FROM PP_QC_PARAM_PROCESS  PP
LEFT JOIN ADM_CODE_ELEMENTS AC ON PP.WIP_STAGE_ID=AC.ID
LEFT JOIN PP_PROCESS_CONFIG PC ON PP.PROCESS_ID=PC.ID
LEFT JOIN PP_PROCESS_CONFIG PCC ON PP.SUB_PROCESS_ID=PCC.ID
WHERE  PP.QC_PARAM_ID = :pQC_PARAM_ID --10020 
AND PP.IS_IPQC = 'N'

-------------------------------------------------------------------------------


--RIGHT PANEL  BODY -   - 5th API (NO CHANGE) 
API TYPE : GET
API NAME : api/pp/get-ipqctest-stage-data/{pQC_PARAM_ID}

Response Fields :  
	 AC.ELEMENT_NAME = WIP_STAGE_NAME, PC.PROCESS_NAME, PCC.PROCESS_NAME = SUB_PROCESS_NAME
Operational Fields: 
	PP.ID, PP.QC_PARAM_ID, PP.WIP_STAGE_ID, AC.ELEMENT_NAME AS WIP_STAGE_NAME, PP.PROCESS_ID, PC.PROCESS_NAME, PP.SUB_PROCESS_ID, PCC.PROCESS_NAME AS SUB_PROCESS_NAME
 
PARAMETER : PP.QC_PARAM_ID = pQC_PARAM_ID  

Table Name: 
            PP_QC_PARAM_PROCESS = PP
            ADM_CODE_ELEMENTS = AC         
            PP_PROCESS_CONFIG = PC 
            PP_PROCESS_CONFIG = PCC
             
            
Relation :  
            PP.WIP_STAGE_ID=AC.ID
            PP.PROCESS_ID=PC.ID
            PP.SUB_PROCESS_ID=PCC.ID
  
Filter by:   
            PP.IS_IPQC = 'Y'
                  
QUERY :  
  
SELECT PP.ID, PP.QC_PARAM_ID, PP.WIP_STAGE_ID, AC.ELEMENT_NAME AS WIP_STAGE_NAME, PP.PROCESS_ID, PC.PROCESS_NAME, PP.SUB_PROCESS_ID, PCC.PROCESS_NAME AS SUB_PROCESS_NAME
FROM PP_QC_PARAM_PROCESS  PP
LEFT JOIN ADM_CODE_ELEMENTS AC ON PP.WIP_STAGE_ID=AC.ID
LEFT JOIN PP_PROCESS_CONFIG PC ON PP.PROCESS_ID=PC.ID
LEFT JOIN PP_PROCESS_CONFIG PCC ON PP.SUB_PROCESS_ID=PCC.ID
WHERE  PP.QC_PARAM_ID = :pQC_PARAM_ID --10047
AND PP.IS_IPQC = 'Y'

--------------------------------------------------------------


--RIGHT PANEL  BODY -   - 6th API 
API TYPE : GET
API NAME : api/pp/get-test-spec-data/{pQC_PARAM_ID}/{pQC_PARAM_PROCESS_ID}

Response Fields :  
	  PS.TEST_ID, AC.ELEMENT_NAME = TEST_NAME, AC.ELEMENT_NAME = TEST_TYPE_NAME, PS.SPECIFICATION
	  
Operational Fields: 
	PS.ID, PS.QC_PARAM_ID, PS.VERSION_NO, PS.TEST_TYPE, AC.ELEMENT_NAME = TEST_TYPE_NAME, PS.TEST_ID, AC.ELEMENT_NAME = TEST_NAME, 
	PS.SPECIFICATION, PS.VALUE_RANGE, PS.MEAN_OF_RESULT, PS.SORT_ORDER, PS.STATUS, 
    PS.CREATED_BY, PS.CREATED_AT, PS.UPDATED_BY, PS.UPDATED_AT, PS.QC_PARAM_PROCESS_ID
    
PARAMETER : pQC_PARAM_ID NUMBER,
            pQC_PARAM_PROCESS_ID NUMBER

Table Name: FD_GET_WIPQC_TEST_SPEC_DATA (pQC_PARAM_ID NUMBER,pQC_PARAM_PROCESS_ID NUMBER) 
            /*PP_QC_PARAM_SPEC = PS
            ADM_CODE_ELEMENTS = AC         
            ADM_CODE_ELEMENTS = ACC */ 
             
            
Relation :  
            PS.TEST_TYPE=AC.ID
             PS.TEST_ID=ACC.ID
              
  
Filter by:   
            
QUERY :  

SELECT FD_GET_WIPQC_TEST_SPEC_DATA (:pQC_PARAM_ID ,:pQC_PARAM_PROCESS_ID ) FROM DUAL --10187,10211

/*   OLD
SELECT PS.ID, PS.QC_PARAM_ID, PS.VERSION_NO, PS.TEST_TYPE, PQIT.TEST_NAME,-- AC.ELEMENT_NAME AS TEST_NAME,
PS.TEST_ID,  PS.SPECIFICATION, PS.SORT_ORDER, PS.STATUS, 
PS.CREATED_BY, PS.CREATED_AT, PS.UPDATED_BY, PS.UPDATED_AT, PS.QC_PARAM_PROCESS_ID,PS.TEST_SERIAL_NO,PS.PARENT_TEST_ID
FROM PP_QC_PARAM_SPEC PS
LEFT JOIN PP_QC_IPQC_TEST PQIT ON PQIT.ID = PS.TEST_ID
--LEFT JOIN PP_QC_IPQC_TEST PQIT1 ON PQIT1.ID = PS.TEST_ID
WHERE PS.QC_PARAM_ID = :pQC_PARAM_ID --10179
AND PS.QC_PARAM_PROCESS_ID = :pQC_PARAM_PROCESS_ID --10202/10203
--AND PS.PARENT_TEST_ID IS NULL

---------
SELECT PS.ID, PS.QC_PARAM_ID, PS.VERSION_NO, PS.TEST_TYPE, AC.ELEMENT_NAME AS TEST_TYPE_NAME, PS.TEST_ID, AC.ELEMENT_NAME AS TEST_NAME, PS.SPECIFICATION, PS.SORT_ORDER, PS.STATUS, 
PS.CREATED_BY, PS.CREATED_AT, PS.UPDATED_BY, PS.UPDATED_AT, PS.QC_PARAM_PROCESS_ID,PS.TEST_SERIAL_NO
FROM PP_QC_PARAM_SPEC PS
JOIN ADM_CODE_ELEMENTS AC ON PS.TEST_TYPE=AC.ID
JOIN ADM_CODE_ELEMENTS ACC ON PS.TEST_ID=ACC.ID
WHERE PS.QC_PARAM_ID = :pQC_PARAM_ID --10179
AND PS.QC_PARAM_PROCESS_ID = :pQC_PARAM_PROCESS_ID --10202/10203
*/

--------------------------------------------------------------

API TYPE : GET
API NAME : api/pp/get-test-sub-test-data/{pPROD_ID}/{pPROD_TYPE}

Response Fields :  ID, DISPLAY_CODE, TEST_DEPARTMENT, DEPARTMENT_NAME, TEST_NAME, TEST_MEASURE, TEST_MEASURE_NAME, TEST_TYPE, TEST_TYPE_NAME, PARENT_ID, PROD_ID
                     
	  
Operational Fields: ID, DISPLAY_CODE, TEST_DEPARTMENT, DEPARTMENT_NAME, TEST_NAME, TEST_MEASURE, TEST_MEASURE_NAME, TEST_TYPE, TEST_TYPE_NAME, PARENT_ID, PROD_ID
         
PARAMETER  :        pPROD_ID    NUMBER,
                    pSBU_ID     NUMBER,
                    pPROD_TYPE  VARCHAR2

Table Name:   	    JERP_PP_UTIL.FD_GET_TEST_SUB_TEST_DATA (pPROD_ID NUMBER,pSBU_ID NUMBER,pPROD_TYPE VARCHAR2)

			  
Relation : 	  	
                
			  
Filter by:  

QUERY : 

SELECT  JERP_PP_UTIL.FD_GET_TEST_SUB_TEST_DATA (:pPROD_ID,:pSBU_ID,:pPROD_TYPE ) FROM DUAL   --7594,2,'RAW-PACK' OR WIP

#Feature Name : QC PARAM SETUP 
--------------------------------------------------------------

NEW TABLE FOR SAVING

select * FROM PP_QC_PARAM
SELECT * FROM PP_QC_PARAM_PROCESS (2ND TABLE) (QC_PARAM_ID = PP_QC_PARAM.ID)
API TYPE : POST
API NAME : api/pp/create-update-qc-param-process 

SELECT * FROM PP_QC_PARAM_SPEC (NEW COLUMN-QC_PARAM_PROCESS_ID = PP_QC_PARAM_PROCESS.ID) (3RD TABLE)


------------------------------



--RIGHT PANEL  BODY(STAGE TABLE-QC/IPQC SPEC) - 1st API
API TYPE : GET
API NAME : api/pp/get-qc-ipqc-stage-process-data

PP_QC_IPQC_STAGE_DATA

JERP_PP_UTIL.PP_QC_IPQC_STAGE_DATA PROCEDURE

JERP_PP_UTIL.PP_QC_IPQC_STAGE_DATA(pPROD_ID       IN NUMBER,
                                      pQC_DATA      OUT CLOB,
                                      pSTATUS        OUT CLOB)

A. pPROD_ID    IN  NUMBER   -- (10161)

B. pQC_DATA (OUT CLOB)
                    pQC_DATA (JSON OBJECT)
                    Header = qc_stage_list

                    OBJECT
                    
                    GET_NUMBER  ('prod_id') 
                    GET_NUMBER  ('wip_stage_id')                    
                    GET_STRING  ('stage_name') 
                    GET_NUMBER  ('process_id')            
                    GET_STRING  ('process_name')          
                    GET_NUMBER  ('sub_process_id')
                    GET_STRING  ('sub_process_name') 
 
                    Header = ipqc_stage_list

                    OBJECT
                    
                    GET_NUMBER  ('prod_id') 
                    GET_NUMBER  ('wip_stage_id')                    
                    GET_STRING  ('stage_name') 
                    GET_NUMBER  ('process_id')            
                    GET_STRING  ('process_name')          
                    GET_NUMBER  ('sub_process_id')
                    GET_STRING  ('sub_process_name')  
 
 
C. pSTATUS (Out CLOB)

pSTATUS CLOB data return DB status against input data.

----------------


/* execute procedure
declare 
pQC_DATA clob := null;
pSTATUS clob;

begin
 PP_QC_IPQC_STAGE_DATA (200, pQC_DATA, pSTATUS);
 dbms_output.put_line(pQC_DATA);
 dbms_output.put_line(pSTATUS);
end;
 
*/

-----------------------------

---VIEW MODE--API NAME - /api/pp/get-material-list-view-mode/{pPROD_CAT_ID}

SELECT AP.ID, AP.PROD_NAME, (CASE WHEN AP.PROD_TYPE IN(502,503) THEN 'RAW-PACK' ELSE 'WIP' END) AS PROD_TYPE_NAME
FROM ADM_PRODUCTS AP JOIN ADM_SBU_PRODUCTS ASP ON AP.ID=ASP.PROD_ID 
JOIN PP_QC_PARAM QP ON AP.ID=QP.PROD_ID 
WHERE AP.PROD_CAT =: pPROD_CAT_ID    ---SAMPLE -251/ 252/ 271/ 401

--CREATE MODE--API NAME -/api/pp/get-material-list/{pPROD_CAT_ID}

SELECT AP.ID, AP.PROD_NAME, (CASE WHEN AP.PROD_TYPE IN(502,503) THEN 'RAW-PACK' ELSE 'WIP' END) AS PROD_TYPE_NAME
FROM ADM_PRODUCTS AP JOIN ADM_SBU_PRODUCTS ASP ON AP.ID=ASP.PROD_ID 
WHERE AP.PROD_CAT =: pPROD_CAT_ID   ---SAMPLE -251/ 252/ 271/ 401
AND AP.ID NOT IN(SELECT PROD_ID FROM PP_QC_PARAM);

